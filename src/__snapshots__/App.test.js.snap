// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`matches snapshot 1`] = `
<App
  history={
    Object {
      "action": "POP",
      "block": [Function],
      "createHref": [Function],
      "go": [Function],
      "goBack": [Function],
      "goForward": [Function],
      "length": 1,
      "listen": [Function],
      "location": Object {
        "hash": "",
        "pathname": "/",
        "search": "",
        "state": undefined,
      },
      "push": [Function],
      "replace": [Function],
    }
  }
  persistor={
    Object {
      "dispatch": [Function],
      "flush": [Function],
      "getState": [Function],
      "pause": [Function],
      "persist": [Function],
      "purge": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <Provider
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
  >
    <PersistGate
      loading={
        <h1>
          Loading
        </h1>
      }
      persistor={
        Object {
          "dispatch": [Function],
          "flush": [Function],
          "getState": [Function],
          "pause": [Function],
          "persist": [Function],
          "purge": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        }
      }
    >
      <ConnectedRouter
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
      >
        <Router
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            }
          }
        >
          <withRouter(Connect(Navigator))>
            <Route
              render={[Function]}
            >
              <Connect(Navigator)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
                isAuthenticated={false}
                location={
                  Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  }
                }
                logout={[Function]}
                match={
                  Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  }
                }
              >
<<<<<<< HEAD
                <styled.div>
                  <div
                    className="sc-VigVT kpqotZ"
                  >
                    <styled.div>
                      <div
                        className="sc-jTzLTM gOqUIa"
                      >
                        <Styled(styled.div)>
                          <styled.div
                            className="sc-jzJRlG enxKql"
                          >
                            <div
                              className="sc-jzJRlG enxKql sc-fjdhpX gIIVcx"
=======
                <Navigator
                  history={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                  location={
                    Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    }
                  }
                  match={
                    Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    }
                  }
                >
                  <styled.div>
                    <div
                      className="sc-gzVnrw kugQOZ"
                    >
                      <styled.div>
                        <div
                          className="sc-htoDjs jkXbuW"
                        >
                          <Styled(styled.div)>
                            <styled.div
                              className="sc-iwsKbI jQhHGA"
>>>>>>> development
                            >
                              <div
                                className="sc-iwsKbI jQhHGA sc-dnqmqq cbdZBN"
                              >
                                <NavLink
                                  exact={true}
                                  ignore={true}
                                  label="React Template"
                                  to="/"
                                >
                                  <Route
                                    exact={true}
                                    path="/"
                                  >
<<<<<<< HEAD
                                    <Link
                                      className="sc-kAzzGY gOOAQV"
                                      replace={false}
                                      to="/"
                                    >
                                      <a
                                        className="sc-kAzzGY gOOAQV"
                                        href="/"
                                        onClick={[Function]}
=======
                                    <Styled(Link)
                                      className=""
                                      to="/"
                                    >
                                      <Link
                                        className="sc-gqjmRU iipNCQ"
                                        replace={false}
                                        to="/"
>>>>>>> development
                                      >
                                        <a
                                          className="sc-gqjmRU iipNCQ"
                                          href="/"
                                          onClick={[Function]}
                                        >
                                          React Template
                                        </a>
                                      </Link>
                                    </Styled(Link)>
                                  </Route>
                                </NavLink>
                                <NavLink
                                  label="Other 1"
                                  to="/other1"
                                >
                                  <Route
                                    path="/other1"
                                  >
<<<<<<< HEAD
                                    <Link
                                      className="sc-kAzzGY gOOAQV"
                                      replace={false}
                                      to="/other1"
                                    >
                                      <a
                                        className="sc-kAzzGY gOOAQV"
                                        href="/other1"
                                        onClick={[Function]}
=======
                                    <Styled(Link)
                                      className=""
                                      to="/other1"
                                    >
                                      <Link
                                        className="sc-gqjmRU iipNCQ"
                                        replace={false}
                                        to="/other1"
>>>>>>> development
                                      >
                                        <a
                                          className="sc-gqjmRU iipNCQ"
                                          href="/other1"
                                          onClick={[Function]}
                                        >
                                          Other 1
                                        </a>
                                      </Link>
                                    </Styled(Link)>
                                  </Route>
                                </NavLink>
                                <NavLink
                                  label="Other 2"
                                  to="/other2"
                                >
                                  <Route
                                    path="/other2"
                                  >
<<<<<<< HEAD
                                    <Link
                                      className="sc-kAzzGY gOOAQV"
                                      replace={false}
                                      to="/other2"
                                    >
                                      <a
                                        className="sc-kAzzGY gOOAQV"
                                        href="/other2"
                                        onClick={[Function]}
                                      >
                                        Other 2
                                      </a>
                                    </Link>
                                  </Styled(Link)>
                                </Route>
                              </NavLink>
                            </div>
                          </styled.div>
                        </Styled(styled.div)>
                        <Styled(styled.div)>
                          <styled.div
                            className="sc-cSHVUG CAuLq"
                          >
                            <div
                              className="sc-cSHVUG CAuLq sc-fjdhpX gIIVcx"
                            >
                              <NavLink
                                exact={true}
                                label="Login"
                                to="/login"
                              >
                                <Route
                                  exact={true}
                                  path="/login"
                                >
                                  <Styled(Link)
                                    className=""
                                    to="/login"
                                  >
                                    <Link
                                      className="sc-kAzzGY gOOAQV"
                                      replace={false}
                                      to="/login"
                                    >
                                      <a
                                        className="sc-kAzzGY gOOAQV"
                                        href="/login"
                                        onClick={[Function]}
                                      >
                                        Login
                                      </a>
                                    </Link>
                                  </Styled(Link)>
                                </Route>
                              </NavLink>
                            </div>
                          </styled.div>
                        </Styled(styled.div)>
                      </div>
                    </styled.div>
                    <Switch>
                      <Route
                        component={[Function]}
                        computedMatch={
                          Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/",
                            "url": "/",
=======
                                    <Styled(Link)
                                      className=""
                                      to="/other2"
                                    >
                                      <Link
                                        className="sc-gqjmRU iipNCQ"
                                        replace={false}
                                        to="/other2"
                                      >
                                        <a
                                          className="sc-gqjmRU iipNCQ"
                                          href="/other2"
                                          onClick={[Function]}
                                        >
                                          Other 2
                                        </a>
                                      </Link>
                                    </Styled(Link)>
                                  </Route>
                                </NavLink>
                              </div>
                            </styled.div>
                          </Styled(styled.div)>
                          <Styled(styled.div)>
                            <styled.div
                              className="sc-gZMcBi giNnHm"
                            >
                              <div
                                className="sc-gZMcBi giNnHm sc-dnqmqq cbdZBN"
                              >
                                <NavLink
                                  label="Custom"
                                  to="/custom"
                                >
                                  <Route
                                    path="/custom"
                                  >
                                    <Styled(Link)
                                      className=""
                                      to="/custom"
                                    >
                                      <Link
                                        className="sc-gqjmRU iipNCQ"
                                        replace={false}
                                        to="/custom"
                                      >
                                        <a
                                          className="sc-gqjmRU iipNCQ"
                                          href="/custom"
                                          onClick={[Function]}
                                        >
                                          Custom
                                        </a>
                                      </Link>
                                    </Styled(Link)>
                                  </Route>
                                </NavLink>
                              </div>
                            </styled.div>
                          </Styled(styled.div)>
                        </div>
                      </styled.div>
                      <Switch>
                        <Route
                          component={[Function]}
                          computedMatch={
                            Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/",
                              "url": "/",
                            }
>>>>>>> development
                          }
                          exact={true}
                          location={
                            Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            }
                          }
<<<<<<< HEAD
                        }
                        path="/"
                      >
                        <styled.div>
                          <div
                            className="sc-kgoBCf hIFMFY"
                          >
                            <HelmetWrapper
                              defer={true}
                              encodeSpecialCharacters={true}
=======
                          path="/"
                        >
                          <styled.div>
                            <div
                              className="sc-VigVT lnHQkM"
>>>>>>> development
                            >
                              <HelmetWrapper
                                defer={true}
                                encodeSpecialCharacters={true}
                              >
                                <SideEffect(NullComponent)
                                  defer={true}
                                  encodeSpecialCharacters={true}
                                  title="React Template"
                                  titleAttributes={Object {}}
                                >
                                  <NullComponent
                                    defer={true}
                                    encodeSpecialCharacters={true}
                                    title="React Template"
                                    titleAttributes={Object {}}
                                  />
                                </SideEffect(NullComponent)>
                              </HelmetWrapper>
                              <Route
                                component={[Function]}
                                computedMatch={
                                  Object {
                                    "isExact": true,
                                    "params": Object {},
                                    "path": "/",
                                    "url": "/",
                                  }
                                }
                                exact={true}
                                location={
                                  Object {
                                    "hash": "",
                                    "pathname": "/",
                                    "search": "",
                                    "state": undefined,
                                  }
                                }
                                path="/"
                              >
                                <Connect(Home)
                                  history={
                                    Object {
                                      "action": "POP",
                                      "block": [Function],
                                      "createHref": [Function],
                                      "go": [Function],
                                      "goBack": [Function],
                                      "goForward": [Function],
                                      "length": 1,
                                      "listen": [Function],
                                      "location": Object {
                                        "hash": "",
                                        "pathname": "/",
                                        "search": "",
                                        "state": undefined,
                                      },
                                      "push": [Function],
                                      "replace": [Function],
                                    }
                                  }
                                  location={
                                    Object {
                                      "hash": "",
                                      "pathname": "/",
                                      "search": "",
                                      "state": undefined,
                                    }
                                  }
                                  match={
                                    Object {
                                      "isExact": true,
                                      "params": Object {},
                                      "path": "/",
                                      "url": "/",
                                    }
                                  }
                                >
                                  <Home
                                    history={
                                      Object {
                                        "action": "POP",
                                        "block": [Function],
                                        "createHref": [Function],
                                        "go": [Function],
                                        "goBack": [Function],
                                        "goForward": [Function],
                                        "length": 1,
                                        "listen": [Function],
                                        "location": Object {
                                          "hash": "",
                                          "pathname": "/",
                                          "search": "",
                                          "state": undefined,
                                        },
                                        "push": [Function],
                                        "replace": [Function],
                                      }
                                    }
                                    location={
                                      Object {
                                        "hash": "",
                                        "pathname": "/",
                                        "search": "",
                                        "state": undefined,
                                      }
                                    }
                                    match={
                                      Object {
                                        "isExact": true,
                                        "params": Object {},
                                        "path": "/",
                                        "url": "/",
                                      }
                                    }
                                  >
                                    <Styled(styled.div)>
                                      <styled.div
                                        className="sc-htpNat hTNTjW"
                                      >
<<<<<<< HEAD
                                        <h1>
                                          React Template
                                        </h1>
                                      </div>
                                    </styled.div>
                                  </Styled(styled.div)>
                                </Home>
                              </Connect(Home)>
                            </Route>
                          </div>
                        </styled.div>
                      </Route>
                    </Switch>
                    <styled.div>
                      <div
                        className="sc-kGXeez jHtSAs"
                      >
                        <Styled(styled.div)>
                          <styled.div
                            className="sc-dxgOiQ hTjMfW"
                          >
                            <div
                              className="sc-dxgOiQ hTjMfW sc-kpOJdX jyuchV"
=======
                                        <div
                                          className="sc-htpNat hTNTjW sc-bdVaJa cljovs"
                                        >
                                          <h1>
                                            React Template
                                          </h1>
                                        </div>
                                      </styled.div>
                                    </Styled(styled.div)>
                                  </Home>
                                </Connect(Home)>
                              </Route>
                            </div>
                          </styled.div>
                        </Route>
                      </Switch>
                      <styled.div>
                        <div
                          className="sc-jTzLTM hrEXlU"
                        >
                          <Styled(styled.div)>
                            <styled.div
                              className="sc-jzJRlG enxKql"
>>>>>>> development
                            >
                              <div
                                className="sc-jzJRlG enxKql sc-fjdhpX gIIVcx"
                              >
                                <FooterLink
                                  label="Google"
                                  to="https://google.com"
                                >
<<<<<<< HEAD
                                  <a
                                    className="sc-jKJlTe hyvdBm"
                                    href="https://google.com"
                                    target="_blank"
                                  >
                                    Google
                                  </a>
                                </styled.a>
                              </FooterLink>
                            </div>
                          </styled.div>
                        </Styled(styled.div)>
                        <Styled(styled.div)>
                          <styled.div
                            className="sc-ckVGcZ foYhJp"
                          >
                            <div
                              className="sc-ckVGcZ foYhJp sc-kpOJdX jyuchV"
=======
                                  <styled.a
                                    href="https://google.com"
                                    target="_blank"
                                  >
                                    <a
                                      className="sc-kAzzGY hWxvCe"
                                      href="https://google.com"
                                      target="_blank"
                                    >
                                      Google
                                    </a>
                                  </styled.a>
                                </FooterLink>
                              </div>
                            </styled.div>
                          </Styled(styled.div)>
                          <Styled(styled.div)>
                            <styled.div
                              className="sc-cSHVUG CAuLq"
>>>>>>> development
                            >
                              <div
                                className="sc-cSHVUG CAuLq sc-fjdhpX gIIVcx"
                              >
                                <FooterLink
                                  label="Github"
                                  to="https://github.com/negebauer/react-template"
                                >
<<<<<<< HEAD
                                  <a
                                    className="sc-jKJlTe hyvdBm"
=======
                                  <styled.a
>>>>>>> development
                                    href="https://github.com/negebauer/react-template"
                                    target="_blank"
                                  >
                                    <a
                                      className="sc-kAzzGY hWxvCe"
                                      href="https://github.com/negebauer/react-template"
                                      target="_blank"
                                    >
                                      Github
                                    </a>
                                  </styled.a>
                                </FooterLink>
                              </div>
                            </styled.div>
                          </Styled(styled.div)>
                        </div>
                      </styled.div>
                    </div>
                  </styled.div>
                </Navigator>
              </Connect(Navigator)>
            </Route>
          </withRouter(Connect(Navigator))>
        </Router>
      </ConnectedRouter>
    </PersistGate>
  </Provider>
</App>
`;
